The zmpkg command a command line interface to the VNC-ZCS package management facility.

Under the hood, it is an wrapper for running an dpkg instance inside the ZCS user context, completely independent from the operating system's package management. It handles installation and removal of ZCS packages, including dependency checking.

Additionally the zm-apt-get and zm-aptitude commands provide nice frontends, known from Debian, including repository management, automatic downloads, dependency resolution, upgrades, etc.

h1. First time installation / bootstrap

The bootstrap installation has to be done only once, the first time (when no zmpkg had been installed yet).
It needs to be run as root, as certain permissions have to be fixed to allow running zmpkg entirely in *zimbra* user.
Subsequent updates can be done via *zmpkg* and *zm-apt-get* command in *zimbra* user context.

h2. Requirements

* the *dpkg* and *fakeroot* tools must be installed on the target system and available through *$PATH*
* for *zm-apt-get* and *zm-aptitude* commands, *apt-get* and *aptitude* must also be available
* root access to the host machine
* tarball of zmpkg bootstrap package
* ZCS must already be installed (at least zimbra user and it's homedir must exist)

Bootstrap tarballs can be downloaded at:

http://packages.vnc.biz/zmpkg/bootstrap/

h2. Installation tips for non-Debian based Systems

h3. RHEL / CentOS

* fakeroot is part of standard distribution - just use
  yum -y install fakeroot
* dpkg is available for installation from EPEL.
  http://fedoraproject.org/wiki/EPEL
  EPEL is quite commonly used to install software that is not part of
  standard RHEL / CentOS repositories, so this seems to be quite good
  for a  start
* apt-utils and aptitude are not available yet in EPEL (Work in Progress)
* all files and depencies have to be installed with zmpkg install $package

h3. SLES 11 SP2

* packages are available via opensuse build service at

  fakeroot <pre>
  https://build.opensuse.org/package/show?project=devel%3Atools&package=fakeroot
  https://build.opensuse.org/package/show?project=home%3Ajfehlig&package=fakeroot
  https://build.opensuse.org/package/show?project=home%3Ajfehlig&package=fakeroot
  </pre>

  dpkg <pre>
  https://build.opensuse.org/package/show?project=home%3Aflichtenheld&package=dpkg </pre>

  apt-utils <pre>
  https://build.opensuse.org/package/show?project=home%3Awerfl&package=apt-debian </pre>

h2. Running the bootstrap

Unpack the zmpkg-*.tar.gz tarball and run the *install.sh* script as *root* and the zimbra homedir as second parameter.

For example:

<pre>
./install.sh /opt/zimbra
</pre>

This script will install set up a local package manager instance under the ZCS user and installs the zmpkg command.

h1. Using zmpkg

h2. Installing single packages

Packages come in the form of *.deb archives, which are installed via:

<pre>
zmpkg install <deb-file-names>
</pre>

This call will refuse installation, if dependencies are not met.

After package installation, an post-install routine takes care of deploying new/updated zimlets, sql schemata and run post-install scripts.

h2. Removing packages

<pre>
zmpkg remove <package-name>
</pre>

Note: the current zimlet template makefiles create packages with explicit architecture "All", which appears in the canonical package name.
"zmpkg remove" will try to add the ":All" suffix automatically if required.

h2. Listing installed packages

<pre>
zmpkg list
</pre>

h2. zm-apt-get and zm-aptitude

The zm-apt-get and zm-aptitude commands provide frontends to the apt-get and aptitude commands for running inside Zimbra context.
This tools allow the deployment convenience known from Debian distros (eg. package repositories, automatic downloads, dependency resolution, upgrades, etc)

h3. Setup

To make it work, package repositories must be configured in *$HOME/extensions-extra/zmpkg/etc/apt/sources.list*.

For example: Zimbra7 (helix)

<pre>
deb http://packages.vnc.biz/zmpkg/current/ helix free restricted commercial
</pre>

Zimbra8 (ironmaiden)
<pre>deb http://packages.vnc.biz/zmpkg/current/ ironmaiden free restricted commercial</pre>

With testing repos:

<pre>
http://packages.vnc.biz/zmpkg/testing/	helix free commercial restricted
http://packages.vnc.biz/zmpkg/testing/	ironmaiden free commercial restricted
</pre>

h3. Usage

The zm-apt-get and zm-aptitude commands are just wrappers for usual apt-get and aptitute, to run them in Zimbra context,
and understand the same parameters.

See apt-get and aptitude manpages for more information.

h1. Development system setup

Many packages require certain ZCS core libraries to be present in $HOME/lib/jars. When building under an separate unprivileged user (which is strongly advised), these files have to be symlink'ed (or copied) from an existing ZCS installation.

h2. Manual installation

The call:

<pre>
zmpkg devel-init /opt/zimbra
</pre>

will setup these symlinks to an existing ZCS installation in */opt/zimbra*.

h2. Automatic install

Just fetch the source, run *make* and *make install <original-zimbra-prefix>*
This call will install zmpkg and symlinks to the original zimbra libraries into the current user.

h2. Proxy setup

If your system is behind a firewall and can only access the web via proxy, you'll need to
tell zmpkg how to reach it:

<pre>
export http_proxy=http://myproxy:port/
</pre>

Probably you'd like to put it into your ~/.profile or ~/.bashrc (of the Zimbra user)
