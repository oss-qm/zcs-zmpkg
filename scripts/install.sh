#!/bin/bash

ME="$0"

ZIMBRA_USER="zimbra"
ZIMBRA_GROUP="zimbra"

ZIMBRA_DIRS="
    /extensions-extra
    /extensions-extra/zmpkg
    /extensions-extra/zmpkg/etc
    /extensions-extra/zmpkg/etc/apt
    /var/lib
    /var/lib/dpkg
    /var/lib/dpkg/updates
    /var/lib/dpkg/triggers
    /var/lib/dpkg/info
    /var/log/
    /.aptitude
    /.tmp
    /bin
    /lib/jars
    /zimlets-install
    /packages
    /services
"

ZIMBRA_FILES="
    /var/lib/dpkg/status
    /var/lib/dpkg/available
"

MY_COMMANDS="
    bin/zmpkg
    bin/zm_check_jsp
    bin/zm_redmine_upload
"

err() {
	echo "$ME: $*" >&2
	exit 1
}

warn() {
	echo "== WARNING: $*" >&2
}

info() {
	echo "== $*" >&2
}

check_fakeroot() {
	FAKEROOT_VERSION=`fakeroot -v`
	case "$FAKEROOT_VERSION" in
		*fakeroot\ version\ *)
			echo "Fakeroot ok: $FAKEROOT_VERSION"
		;;
		*fakeroot-ng\ version\ *)
			err "Cant work with fakeroot-ng - need plain fakeroot"
		;;
		*)
			err "Cant find fakeroot. Please install fakeroot (NOT fakeroot-ng)"
		;;
	esac
}

check_fakeroot

zmpkg_help() {
	echo "$ME <zimbra-root>" >&2
	exit 1
}

dpkg_init() {
	for i in $ZIMBRA_DIRS ; do
		info  "processing: $i"
		mkdir -p $ZIMBRA_HOME/$i
		chown $ZIMBRA_USER:$ZIMBRA_GROUP $ZIMBRA_HOME/$i
	done

	for i in $ZIMBRA_FILES ; do
		touch $ZIMBRA_HOME/$i
		chown $ZIMBRA_USER:$ZIMBRA_GROUP $ZIMBRA_HOME/$i
	done

	for i in $MY_COMMANDS ; do
		if [ -f $ZIMBRA_HOME/$i ]; then
			chown $ZIMBRA_USER:$ZIMBRA_GROUP $ZIMBRA_HOME/$i
		fi
	done

	## scan for probably wrong ownerships
	find $ZIMBRA_HOME/mailboxd/webapps -not -user zimbra -or -not -group zimbra -exec "echo" "WARN: probably wrong ownership:" "{}" ";"

	## fix architectures of already installed packages
	DPKG_DB=$ZIMBRA_HOME/var/lib/dpkg
	for i in status available ; do
		touch $DPKG_DB/$i
		cat $DPKG_DB/$i | sed -e 's~Architecture: All~Architecture: all~' > $DPKG_DB/$i.tmp
		mv $DPKG_DB/$i.tmp $DPKG_DB/$i
		chown $ZIMBRA_USER:$ZIMBRA_GROUP $DPKG_DB/$i
	done
}

dpkg_call() {
	dpkg_init
	su $ZIMBRA_USER -c "PATH=\"$ZIMBRA_HOME/extensions-extra/zmpkg/tools/:/usr/local/sbin/:$PATH\" /usr/bin/fakeroot /usr/bin/dpkg --force-architecture --force-not-root --root=$ZIMBRA_HOME --log=$ZIMBRA_HOME/var/log/dpkg.log $*"
}

## only want to run as unprivileged user
[ `whoami` != 'root' ] && err "I wanna run as root"

if [ ! "$1" ]; then
	zmpkg_help
fi

ZIMBRA_HOME="$1"

if ! fakeroot /bin/true ; then
	err "$0: fakeroot needs to be installed"
fi

if ! dpkg --help >/dev/null ; then
	err "$0: dpkg needs to be installed"
fi

if ! apt-get --help >/dev/null ; then
	warn "apt-get not installed -> zm-apt-get wont be available"
	NON_DEBIAN=1
fi

if ! aptitude --help >/dev/null; then
	warn "aptitude not installed -> zm-aptitude wont be available"
	NON_DEBIAN=1
fi

## detect zimbra base version
ZIMBRA_VERSION_STRING=`su - zimbra -c "zmcontrol -v" | grep Release 2>/dev/null`
case "$ZIMBRA_VERSION_STRING" in
	Release\ 7*)
		ZIMBRA_DIST=helix
	;;
	Release\ 8.0*)
		ZIMBRA_DIST=ironmaiden
	;;
	Release\ 8.5*)
		ZIMBRA_DIST=judaspriest
	;;
	*)
		warn "Cannot detect zimbra version. (is zmcontrol available ?)"
		warn "You'll need to configure the repo locations manually"
	;;
esac

SOURCES_LIST=$ZIMBRA_HOME/extensions-extra/zmpkg/etc/apt/sources.list

## configure
if [ -f $SOURCES_LIST ]; then
	if [ "$ZIMBRA_DIST" == "judaspriest" ]; then
		if grep " ironmaiden " $SOURCES_LIST >/dev/null ; then
			info "Repo still configured for ironmaiden, but we're on judaspriest ... fixing it"
			cat $SOURCES_LIST | sed -e 's~ ironmaiden ~ judaspriest ~' > $SOURCES_LIST.tmp
			mv $SOURCES_LIST.tmp $SOURCES_LIST
		fi
	fi
else
	info "Apt repos not configured yet. Adding default configuration"
	(
		echo "## automatic entry generated by bootstrap install"
		echo "## NOTE: you should retain formatting (spaces instead of tabs) for further automatic config upgrades to work"
		echo "deb http://packages.vnc.biz/zmpkg/current $ZIMBRA_DIST free restricted"
		echo ""
		echo "## uncomment this if you want to use commercial VNC products"
		echo "## NOTE: these products are free for evaluation-only, but charged on usage"
		echo "##       please see http://www.vnc.biz/ for more information"
		echo "# deb http://packages.vnc.biz/zmpkg/current $ZIMBRA_DIST commercial"
		echo ""
		echo "## add your own repos here"
		echo ""
	) > $SOURCES_LIST
fi

chown $ZIMBRA_USER:$ZIMBRA_GROUP $SOURCES_LIST

if [ "$NON_DEBIAN" ]; then
	warn "Looks like you're not Debian or Ubuntu"
	warn "Please refer to documentation on how to install on rpm-based distros"
	warn "(sleeping for 5 seconds ...)"
	sleep 5
fi

## fixup package file permissions
for list in `find $ZIMBRA_HOME/var/lib/dpkg -name "*.list"` ; do
	for f in `cat $list` ; do
		chown $ZIMBRA_USER:$ZIMBRA_GROUP $ZIMBRA_HOME/$f
	done
done

dpkg_call -i zcs-zmpkg*.deb
dpkg_call -i zcs-zmpkg*.deb
dpkg_call -i zcs-zmpkg*.deb
