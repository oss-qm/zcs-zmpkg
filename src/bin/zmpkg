#!/bin/bash

ME="$0"

export LC_ALL="C"

err() {
	echo "$ME: $*" >&2
	exit 1
}

log() {
	echo "$*" >&2
}

## only want to run as unprivileged user
[ `whoami` == 'root' ] && err "dont wanna run as root"

ZIMBRA_ROOT="$HOME"
PATH="$ZIMBRA_ROOT/bin:$PATH"

dpkg_init() {
	mkdir -p \
		$ZIMBRA_ROOT/var/lib/dpkg		\
		$ZIMBRA_ROOT/var/lib/dpkg/updates	\
		$ZIMBRA_ROOT/var/lib/dpkg/triggers	\
		$ZIMBRA_ROOT/var/lib/dpkg/info		\
		$ZIMBRA_ROOT/var/log			\
		$ZIMBRA_ROOT/.tmp			|| err "permission problem. cannot access package database"

	touch	\
		$ZIMBRA_ROOT/var/lib/dpkg/status	\
		$ZIMBRA_ROOT/var/lib/dpkg/available	|| err "permission problem. cannot access package database"
}

zmpkg_help() {
	echo "Available commands:"
	echo "$ME install <deb-file-name>         install a package file"
	echo "$ME remove <package-name>           remove a package"
	echo "$ME list                            list installed packages"
	echo "$ME redeploy                        deploy zimlets that haven't been deployed yet (due interruption)"
	echo "$ME check-installed <package-name>  check whether package with given name is installed (for scripting use)"
	echo "$ME devel-init <zimbra-root>        initial local development environment (using given zimbra installation)"
	echo "$ME dpkg <...>                      direct dpkg call"
	echo ""
	if dpkg --version >/dev/null; then
		local dpkg_version=`dpkg --version | grep "package management program version" | sed -e 's~.*version ~~' 2>/dev/null`
		echo "Using dpkg version: $dpkg_version"
	else
		echo "========="
		echo "  WARNING: dpkg command doesn't seem to be installed on your system - I *need* it"
		echo "  Either install it using your operating system's package management"
		echo "  or install it manually into $ZIMBRA_ROOT/bin"
		echo "========="
		exit 2
	fi
	exit 1
}

zmpkg_install() {
	[ "$1" ] || zmpkg_help
	zmpkg-dpkg -i "$@" && zmpkg-autodeploy
}

zmpkg_list() {
	zmpkg-dpkg -l "$@" | sed -e 's~:All ~     ~'
}

## fixme should support versioning
zmpkg_check_installed() {
	pkglist=`echo "$*" | sed -e 's~,~ ~g'`
	for i in $pkglist ; do
		if [ "$i" != "__NONE__" ]; then
			if ! ( zmpkg-dpkg -s "$i" || zmpkg-dpkg -s "$i:All" ) 2>/dev/null >/dev/null; then
				err "missing dependency $i"
				exit 1
			fi
		fi
	done
	exit 0
}

zmpkg_remove() {
	local l=""
	local i

	for i in "$@" ; do
		i=`echo "$i" | sed -e 's~:All~~'`
		l="$l $i"
	done

	zmpkg-dpkg -r $l
	zmpkg-autodeploy
}

zmpkg-checkperms

case "$1" in
	install)
		shift
		zmpkg_install "$@"
	;;
	list)
		shift
		zmpkg_list "$@"
	;;
	remove)
		shift
		zmpkg_remove "$@"
	;;
	redeploy)
		shift
		zmpkg-autodeploy "$@"
	;;
	check-installed)
		shift
		zmpkg_check_installed "$@"
	;;
	devel-init)
		shift
		zmpkg-devel-init "$@"
	;;
	dpkg)
		shift
		zmpkg-dpkg "$@"
	;;
	init)
		shift
		dpkg_init
	;;
	*)
		zmpkg_help
	;;
esac
