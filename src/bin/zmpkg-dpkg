#!/bin/bash

ME="$0"

export LC_ALL="C"

err() {
	echo "$ME: $*" >&2
	exit 1
}

## only want to run as unprivileged user
[ `whoami` == 'root' ] && err "dont wanna run as root"

ZIMBRA_ROOT="$HOME"
PATH="$ZIMBRA_ROOT/bin:$PATH:/sbin:/usr/sbin"

ZIMBRA_USER=`id -un`
ZIMBRA_GROUP=`id -gn`

mkdir -p \
	$ZIMBRA_ROOT/var/lib/dpkg		\
	$ZIMBRA_ROOT/var/lib/dpkg/updates	\
	$ZIMBRA_ROOT/var/lib/dpkg/triggers	\
	$ZIMBRA_ROOT/var/lib/dpkg/info		\
	$ZIMBRA_ROOT/var/log			\
	$ZIMBRA_ROOT/.tmp			|| err "permission problem. cannot access package database"

touch	\
	$ZIMBRA_ROOT/var/lib/dpkg/status	\
	$ZIMBRA_ROOT/var/lib/dpkg/available	|| err "permission problem. cannot access package database"


## special tweaks for being called from apt-get or aptitude
## forcing the architecture suffix on passed package names
fixup_pkg_name() {
	local name=`echo "$1" | sed -e 's~:All$~~' | sed -e 's~:All$~~'`
	echo "$name"
}

COMMAND=""
while [ "$1" ]; do
	case "$1" in
		"--remove")
			shift
			PKGNAME=`fixup_pkg_name "$1"`
			COMMAND="$COMMAND --remove $PKGNAME"
			WANT_AUTODEPLOY=1
			shift
		;;
		"--configure")
			shift
			PKGNAME=`fixup_pkg_name "$1"`
			COMMAND="$COMMAND --configure $PKGNAME"
			WANT_AUTODEPLOY=1
			shift
		;;
		"--version")
			shift
			COMMAND="$COMMAND --version"
			NO_AUTODEPLOY=1
		;;
		"--no-autodeploy")
			NO_AUTODEPLOY=1
			shift
		;;
		*)
			COMMAND="$COMMAND $1"
			shift
		;;
	esac
done

export PATH="$ZIMBRA_ROOT/extensions-extra/zmpkg/tools/:$PATH"

if ! ( PATH="$ZIMBRA_ROOT/extensions-extra/zmpkg/tools/:$PATH" fakeroot dpkg --force-not-root $OPT_FORCE_ARCH --root=$ZIMBRA_ROOT --log=$ZIMBRA_ROOT/var/log/dpkg.log $FOREIGN_ARCH $COMMAND ) ; then
	exit 1
fi

if [ "$WANT_AUTODEPLOY" ] && [ ! "$NO_AUTODEPLOY" ]; then
	zmpkg-autodeploy
fi
